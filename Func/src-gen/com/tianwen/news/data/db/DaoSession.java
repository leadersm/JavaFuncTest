package com.tianwen.news.data.db;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.tianwen.news.data.db.NewsType;
import com.tianwen.news.data.db.Stock;
import com.tianwen.news.data.db.SearchHistory;
import com.tianwen.news.data.db.Read;
import com.tianwen.news.data.db.AutoReport;
import com.tianwen.news.data.db.Messages;

import com.tianwen.news.data.db.NewsTypeDao;
import com.tianwen.news.data.db.StockDao;
import com.tianwen.news.data.db.SearchHistoryDao;
import com.tianwen.news.data.db.ReadDao;
import com.tianwen.news.data.db.AutoReportDao;
import com.tianwen.news.data.db.MessagesDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig newsTypeDaoConfig;
    private final DaoConfig stockDaoConfig;
    private final DaoConfig searchHistoryDaoConfig;
    private final DaoConfig readDaoConfig;
    private final DaoConfig autoReportDaoConfig;
    private final DaoConfig messagesDaoConfig;

    private final NewsTypeDao newsTypeDao;
    private final StockDao stockDao;
    private final SearchHistoryDao searchHistoryDao;
    private final ReadDao readDao;
    private final AutoReportDao autoReportDao;
    private final MessagesDao messagesDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        newsTypeDaoConfig = daoConfigMap.get(NewsTypeDao.class).clone();
        newsTypeDaoConfig.initIdentityScope(type);

        stockDaoConfig = daoConfigMap.get(StockDao.class).clone();
        stockDaoConfig.initIdentityScope(type);

        searchHistoryDaoConfig = daoConfigMap.get(SearchHistoryDao.class).clone();
        searchHistoryDaoConfig.initIdentityScope(type);

        readDaoConfig = daoConfigMap.get(ReadDao.class).clone();
        readDaoConfig.initIdentityScope(type);

        autoReportDaoConfig = daoConfigMap.get(AutoReportDao.class).clone();
        autoReportDaoConfig.initIdentityScope(type);

        messagesDaoConfig = daoConfigMap.get(MessagesDao.class).clone();
        messagesDaoConfig.initIdentityScope(type);

        newsTypeDao = new NewsTypeDao(newsTypeDaoConfig, this);
        stockDao = new StockDao(stockDaoConfig, this);
        searchHistoryDao = new SearchHistoryDao(searchHistoryDaoConfig, this);
        readDao = new ReadDao(readDaoConfig, this);
        autoReportDao = new AutoReportDao(autoReportDaoConfig, this);
        messagesDao = new MessagesDao(messagesDaoConfig, this);

        registerDao(NewsType.class, newsTypeDao);
        registerDao(Stock.class, stockDao);
        registerDao(SearchHistory.class, searchHistoryDao);
        registerDao(Read.class, readDao);
        registerDao(AutoReport.class, autoReportDao);
        registerDao(Messages.class, messagesDao);
    }
    
    public void clear() {
        newsTypeDaoConfig.getIdentityScope().clear();
        stockDaoConfig.getIdentityScope().clear();
        searchHistoryDaoConfig.getIdentityScope().clear();
        readDaoConfig.getIdentityScope().clear();
        autoReportDaoConfig.getIdentityScope().clear();
        messagesDaoConfig.getIdentityScope().clear();
    }

    public NewsTypeDao getNewsTypeDao() {
        return newsTypeDao;
    }

    public StockDao getStockDao() {
        return stockDao;
    }

    public SearchHistoryDao getSearchHistoryDao() {
        return searchHistoryDao;
    }

    public ReadDao getReadDao() {
        return readDao;
    }

    public AutoReportDao getAutoReportDao() {
        return autoReportDao;
    }

    public MessagesDao getMessagesDao() {
        return messagesDao;
    }

}
